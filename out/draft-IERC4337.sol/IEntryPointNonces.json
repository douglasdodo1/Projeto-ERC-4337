{"abi":[{"type":"function","name":"getNonce","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"uint192","internalType":"uint192"}],"outputs":[{"name":"nonce","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handle nonce management for accounts. Nonces are used in accounts as a replay protection mechanism and to ensure the order of user operations. To avoid limiting the number of operations an account can perform, the interface allows using parallel nonces by using a `key` parameter. See https://eips.ethereum.org/EIPS/eip-4337#semi-abstracted-nonce-support[ERC-4337 semi-abstracted nonce support].\",\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"details\":\"Returns the nonce for a `sender` account and a `key`. Nonces for a certain `key` are always increasing.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/openzeppelin-contracts/contracts/interfaces/draft-IERC4337.sol\":\"IEntryPointNonces\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"utils/openzeppelin-contracts/contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc\",\"dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getNonce(address,uint192)":{"details":"Returns the nonce for a `sender` account and a `key`. Nonces for a certain `key` are always increasing."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"utils/openzeppelin-contracts/contracts/interfaces/draft-IERC4337.sol":"IEntryPointNonces"},"evmVersion":"cancun","libraries":{}},"sources":{"utils/openzeppelin-contracts/contracts/interfaces/draft-IERC4337.sol":{"keccak256":"0xe9d0f9f3c6626d14e849d1295b9222d58b5d4a48c7d3f0d0c82dcf0c6542b9bf","urls":["bzz-raw://6aaf000ef7df0f059e1eaa34b3db6d5bed1ab0ed59782b0e9bb086b5b8ef83cc","dweb:/ipfs/QmekM1G5ENxGm23VeszyEjnbzf8g3czj2k8Mtig9RmnTnr"],"license":"MIT"}},"version":1},"id":27}